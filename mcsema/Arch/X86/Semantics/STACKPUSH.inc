/* Copyright 2015 Peter Goodman (peter@trailofbits.com), all rights reserved. */

namespace {

template <typename S>
DEF_SEM(PUSH, S val_) {
  typedef typename BaseType<S>::Type T;
  const T pushed_val = R(val_);
  const uintptr_t sp = R(state.gpr.rsp.full);
  const uintptr_t new_sp = sp - sizeof(pushed_val);

  MnW<T> stack = {new_sp};
  W(state.gpr.rsp.full) = new_sp;
  W(stack) = pushed_val;
}

}  // namespace

DEF_ISEL(PUSH_GPRv_FFr6_16) = PUSH<R16>;
DEF_ISEL_RI32or64(PUSH_GPRv_FFr6, PUSH);

DEF_ISEL(PUSH_GPRv_50_16) = PUSH<R16>;
DEF_ISEL_RI32or64(PUSH_GPRv_50, PUSH);

DEF_ISEL(PUSH_IMMz_16) = PUSH<I16>;
DEF_ISEL_RI32or64(PUSH_IMMz, PUSH);

DEF_ISEL(PUSH_IMMb_16) = PUSH<I16>;
DEF_ISEL_RI32or64(PUSH_IMMb, PUSH);

DEF_ISEL(PUSH_MEMv_16) = PUSH<M16>;
DEF_ISEL_M32or64(PUSH_MEMv, PUSH);

/*
238 PUSHF PUSHF PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 STACKPUSH0
545 PUSHAD PUSHAD PUSH BASE I386 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
727 PUSHFQ PUSHFQ PUSH LONGMODE LONGMODE ATTRIBUTES: FIXED_BASE0 STACKPUSH0
738 PUSHFD PUSHFD PUSH BASE I386 ATTRIBUTES: FIXED_BASE0 STACKPUSH0
759 PUSH PUSH_ES PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
760 PUSH PUSH_CS PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
761 PUSH PUSH_SS PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
762 PUSH PUSH_DS PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
766 PUSH PUSH_FS PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
767 PUSH PUSH_GS PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
1017 ENTER ENTER_IMMw_IMMb MISC BASE I186 ATTRIBUTES: ATT_OPERAND_ORDER_EXCEPTION FIXED_BASE0 SCALABLE STACKPUSH0
1300 PUSHA PUSHA PUSH BASE I186 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
 */

