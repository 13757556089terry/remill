/* Copyright 2015 Peter Goodman (peter@trailofbits.com), all rights reserved. */

namespace {

template <typename T>
DEF_SEM(PUSH, T val_) {
  const auto val = R(val_);
  const auto addr = state.gpr.rsp.full - sizeof(val);
  state.gpr.rsp.full = addr;
  Mn<decltype(val)>::Write(addr, val);
}

template <typename T>
DEF_SEM(POP, T dst) {
  const auto addr = state.gpr.rsp.full;
  const auto val = Mn<decltype(R(dst))>::Read(addr);
  state.gpr.rsp.full = addr + sizeof(val);
  W(dst) = val;
}

}  // namespace

DEF_ISEL(PUSH_GPRv_FFr6_16) = PUSH<R16>;
DEF_ISEL_READONLY_32OR64(PUSH_GPRv_FFr6, PUSH);

DEF_ISEL(PUSH_GPRv_50_16) = PUSH<R16>;
DEF_ISEL_READONLY_32OR64(PUSH_GPRv_50, PUSH);

DEF_ISEL(PUSH_IMMz_16) = PUSH<I16>;
DEF_ISEL_READONLY_32OR64(PUSH_IMMz, PUSH);

DEF_ISEL(PUSH_IMMb_16) = PUSH<I16>;
DEF_ISEL_READONLY_32OR64(PUSH_IMMb, PUSH);

DEF_ISEL(PUSH_MEMv_16) = PUSH<M16>;
DEF_ISEL_M32OR64(PUSH_MEMv, PUSH);

/*
238 PUSHF PUSHF PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 STACKPUSH0
545 PUSHAD PUSHAD PUSH BASE I386 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
727 PUSHFQ PUSHFQ PUSH LONGMODE LONGMODE ATTRIBUTES: FIXED_BASE0 STACKPUSH0
738 PUSHFD PUSHFD PUSH BASE I386 ATTRIBUTES: FIXED_BASE0 STACKPUSH0
759 PUSH PUSH_ES PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
760 PUSH PUSH_CS PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
761 PUSH PUSH_SS PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
762 PUSH PUSH_DS PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
766 PUSH PUSH_FS PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
767 PUSH PUSH_GS PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
1017 ENTER ENTER_IMMw_IMMb MISC BASE I186 ATTRIBUTES: ATT_OPERAND_ORDER_EXCEPTION FIXED_BASE0 SCALABLE STACKPUSH0
1300 PUSHA PUSHA PUSH BASE I186 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
 */

DEF_ISEL(POP_GPRv_8F_16) = POP<R16W>;
DEF_ISEL_R32OR64(POP_GPRv_8F, POP);

DEF_ISEL(POP_GPRv_51_16) = POP<R16W>;
DEF_ISEL_R32OR64(POP_GPRv_51, POP);

DEF_ISEL(POP_MEMv_16) = POP<M16>;
DEF_ISEL_M32OR64(POP_MEMv, POP);

/*
3 POPA POPA POP BASE I186 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPOP0
6 POPF POPF POP BASE I86 ATTRIBUTES: FIXED_BASE0 NOTSX STACKPOP0
503 POPFD POPFD POP BASE I386 ATTRIBUTES: FIXED_BASE0 NOTSX STACKPOP0
1048 POPFQ POPFQ POP LONGMODE LONGMODE ATTRIBUTES: FIXED_BASE0 NOTSX STACKPOP0
1318 POPAD POPAD POP BASE I386 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPOP0

1391 POP POP_ES POP BASE I86 ATTRIBUTES: FIXED_BASE0 NOTSX SCALABLE STACKPOP0
1392 POP POP_SS POP BASE I86 ATTRIBUTES: FIXED_BASE0 NOTSX SCALABLE STACKPOP0
1393 POP POP_DS POP BASE I86 ATTRIBUTES: FIXED_BASE0 NOTSX SCALABLE STACKPOP0
1395 POP POP_FS POP BASE I86 ATTRIBUTES: FIXED_BASE0 NOTSX SCALABLE STACKPOP0
1396 POP POP_GS POP BASE I86 ATTRIBUTES: FIXED_BASE0 NOTSX SCALABLE STACKPOP0
 */
