/* Copyright 2015 Peter Goodman (peter@trailofbits.com), all rights reserved. */

namespace {

template <typename T>
DEF_SEM(PUSH, T val_) {
  auto val = R(val_);
  state.gpr.rsp.full -= sizeof(val);
  Mn<decltype(val)>::Write(state.gpr.rsp.full, val);
}

}  // namespace

DEF_ISEL_Mn(PUSH_MEMv, PUSH);
DEF_ISEL_Rn(PUSH_GPRv, PUSH);
DEF_ISEL_Rn(PUSH_GPRv_50, PUSH);
DEF_ISEL_In(PUSH_IMMz, PUSH);
DEF_ISEL_In(PUSH_IMMb, PUSH);

/*
759 PUSH PUSH_ES PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
760 PUSH PUSH_CS PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
761 PUSH PUSH_SS PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
762 PUSH PUSH_DS PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0

766 PUSH PUSH_FS PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
767 PUSH PUSH_GS PUSH BASE I86 ATTRIBUTES: FIXED_BASE0 SCALABLE STACKPUSH0
 */
